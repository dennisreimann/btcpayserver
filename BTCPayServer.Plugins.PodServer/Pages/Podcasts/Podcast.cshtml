@page "/plugins/podserver/podcasts/{podcastId}"
@using System.Globalization
@using BTCPayServer.Abstractions.Contracts
@model BTCPayServer.Plugins.PodServer.Pages.Podcasts.PodcastModel
@inject IFileService _fileService

@{
    ViewData.SetActivePage(PodServerNavPages.Podcast, Model.Podcast.Title);
}

<div class="sticky-header-setup"></div>
<div class="sticky-header d-sm-flex align-items-center justify-content-between">
    <h2 class="mb-0">@ViewData["Title"]</h2>
    <div class="d-flex gap-3 mt-3 mt-sm-0">
        <a asp-page="/Episodes/Create" asp-route-podcastId="@Model.Podcast.PodcastId" class="btn btn-primary" role="button" id="CreateEpisode">
            Create an episode
        </a>
        <a class="btn btn-secondary" asp-page="./Edit" asp-route-podcastId="@Model.Podcast.PodcastId" id="EditPodcast">
            @await Component.InvokeAsync("Icon", new { symbol = "settings" })
        </a>
    </div>
</div>

<partial name="_StatusMessage" />

@if (!string.IsNullOrEmpty(Model.Podcast.ImageFileId))
{
    <img src="@(await _fileService.GetFileUrl(Request.GetAbsoluteRootUri(), Model.Podcast.ImageFileId))" alt="@Model.Podcast.Title" style="max-width: 200px;max-height: 200px;" class="d-block mb-3"/>
}

@Html.Raw(Model.Podcast.Description)

@if (Model.Episodes.Any())
{
    <div class="row">
        <div class="col table-responsive-md">
            <table class="table table-hover">
                <thead>
                <tr>
                    <th>Date</th>
                    <th>Title</th>
                    <th class="text-end">Actions</th>
                </tr>
                </thead>
                <tbody id="PodcastEpisodes">
                @foreach (var episode in Model.Episodes)
                {
                    <tr id="Episode-@episode.EpisodeId">
                        <td>
                            <a asp-page="/Episodes/Episode" asp-route-podcastId="@Model.Podcast.PodcastId" asp-route-episodeId="@episode.EpisodeId" class="episode">
                                @if (episode.PublishedAt != null)
                                {
                                    <time datetime="@episode.PublishedAt?.ToString("o", CultureInfo.InvariantCulture)">
                                        @episode.PublishedAt?.ToTimeAgo()
                                    </time>
                                }
                                else
                                {
                                    <span class="text-danger">No publish date</span>
                                }
                            </a>
                        </td>
                        <td class="episode-title">@episode.Title</td>
                        <td class="text-end">
                            <a asp-page="/Episodes/Public" asp-route-episodeId="@episode.EpisodeId" class="podcast-view" target="episode_@episode.EpisodeId">Public Page</a>
                            <span> - </span>
                            <a asp-page="/Episodes/Edit" asp-route-podcastId="@episode.PodcastId" asp-route-episodeId="@episode.EpisodeId" class="episode-edit">Edit</a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
}
else
{
    <p id="PodcastEpisodes" class="text-secondary">There are no episodes yet.</p>
}
