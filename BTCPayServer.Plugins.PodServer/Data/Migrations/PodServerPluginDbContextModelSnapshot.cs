// <auto-generated />
using BTCPayServer.Plugins.PodServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BTCPayServer.Plugins.PodServer.Data.Migrations
{
    [DbContext(typeof(PodServerPluginDbContext))]
    partial class PodServerPluginDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("BTCPayServer.Plugins.PodServer")
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BTCPayServer.Plugins.PodServer.Data.Models.Contribution", b =>
                {
                    b.Property<string>("ContributionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("EpisodeId")
                        .HasColumnType("text");

                    b.Property<string>("PersonId")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<int>("Split")
                        .HasColumnType("integer");

                    b.HasKey("ContributionId");

                    b.HasIndex("EpisodeId");

                    b.HasIndex("PersonId");

                    b.ToTable("Contribution", "BTCPayServer.Plugins.PodServer");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.PodServer.Data.Models.Enclosure", b =>
                {
                    b.Property<string>("EnclosureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("EpisodeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAlternate")
                        .HasColumnType("boolean");

                    b.Property<int>("Length")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("EnclosureId");

                    b.HasIndex("EpisodeId");

                    b.ToTable("Enclosure", "BTCPayServer.Plugins.PodServer");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.PodServer.Data.Models.Episode", b =>
                {
                    b.Property<string>("EpisodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<string>("PodcastId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SeasonId")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("EpisodeId");

                    b.HasIndex("PodcastId");

                    b.HasIndex("SeasonId");

                    b.ToTable("Episodes", "BTCPayServer.Plugins.PodServer");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.PodServer.Data.Models.Person", b =>
                {
                    b.Property<string>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PodcastId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("PersonId");

                    b.HasIndex("PodcastId");

                    b.ToTable("Person", "BTCPayServer.Plugins.PodServer");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.PodServer.Data.Models.Podcast", b =>
                {
                    b.Property<string>("PodcastId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MainImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Owner")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("PodcastId");

                    b.HasIndex("UserId");

                    b.ToTable("Podcasts", "BTCPayServer.Plugins.PodServer");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.PodServer.Data.Models.Season", b =>
                {
                    b.Property<string>("SeasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<string>("PodcastId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SeasonId");

                    b.HasIndex("PodcastId");

                    b.ToTable("Season", "BTCPayServer.Plugins.PodServer");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.PodServer.Data.Models.Contribution", b =>
                {
                    b.HasOne("BTCPayServer.Plugins.PodServer.Data.Models.Episode", null)
                        .WithMany("Contributors")
                        .HasForeignKey("EpisodeId");

                    b.HasOne("BTCPayServer.Plugins.PodServer.Data.Models.Person", "Person")
                        .WithMany("Contributions")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Person");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.PodServer.Data.Models.Enclosure", b =>
                {
                    b.HasOne("BTCPayServer.Plugins.PodServer.Data.Models.Episode", "Episode")
                        .WithMany("Enclosures")
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Episode");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.PodServer.Data.Models.Episode", b =>
                {
                    b.HasOne("BTCPayServer.Plugins.PodServer.Data.Models.Podcast", "Podcast")
                        .WithMany("Episodes")
                        .HasForeignKey("PodcastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BTCPayServer.Plugins.PodServer.Data.Models.Season", "Season")
                        .WithMany()
                        .HasForeignKey("SeasonId");

                    b.Navigation("Podcast");

                    b.Navigation("Season");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.PodServer.Data.Models.Person", b =>
                {
                    b.HasOne("BTCPayServer.Plugins.PodServer.Data.Models.Podcast", "Podcast")
                        .WithMany("People")
                        .HasForeignKey("PodcastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("BTCPayServer.Plugins.PodServer.Data.Models.ValueRecipient", "ValueRecipient", b1 =>
                        {
                            b1.Property<string>("PersonId")
                                .HasColumnType("text");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("CustomKey")
                                .HasColumnType("text");

                            b1.Property<string>("CustomValue")
                                .HasColumnType("text");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person", "BTCPayServer.Plugins.PodServer");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.Navigation("Podcast");

                    b.Navigation("ValueRecipient");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.PodServer.Data.Models.Season", b =>
                {
                    b.HasOne("BTCPayServer.Plugins.PodServer.Data.Models.Podcast", "Podcast")
                        .WithMany("Seasons")
                        .HasForeignKey("PodcastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Podcast");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.PodServer.Data.Models.Episode", b =>
                {
                    b.Navigation("Contributors");

                    b.Navigation("Enclosures");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.PodServer.Data.Models.Person", b =>
                {
                    b.Navigation("Contributions");
                });

            modelBuilder.Entity("BTCPayServer.Plugins.PodServer.Data.Models.Podcast", b =>
                {
                    b.Navigation("Episodes");

                    b.Navigation("People");

                    b.Navigation("Seasons");
                });
#pragma warning restore 612, 618
        }
    }
}
